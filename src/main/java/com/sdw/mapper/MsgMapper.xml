<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdw.mapper.MsgMapper">
  <resultMap id="BaseResultMap" type="com.sdw.entity.Msg">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="messageid" jdbcType="BIGINT" property="messageid" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <association property="user" javaType="com.sdw.entity.User" columnPrefix="u_">
    <!-- 这里column里面是定义的别名和你查询的语句 -->
    <id column="userid" property="userid"/>
    <id column="username" property="username"/>
  </association>
    <association property="message" javaType="com.sdw.entity.Message" columnPrefix="m_">
      <!-- 这里column里面是定义的别名和你查询的语句 -->
      <id column="id" property="id"/>
      <id column="message" property="message"/>
      <id column="time" property="time"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from msg
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.sdw.entity.Msg" useGeneratedKeys="true">
    insert into msg (msg, messageid, userid
      )
    values (#{msg,jdbcType=VARCHAR}, #{messageid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.sdw.entity.Msg">
    update msg
    set msg = #{msg,jdbcType=VARCHAR},
      messageid = #{messageid,jdbcType=BIGINT},
      userid = #{userid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, msg, messageid, userid
    from msg
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, msg, messageid, userid
    from msg
  </select>

  <!-- 模糊查询 -->
  <sql id="where_sql">
    <where>
      <if test="keyword!=null">
        AND msg name like concat('%',#{keyword},'%')
      </if>
    </where>
  </sql>
  <!-- 查询总数加模糊查询 -->
  <select id="queryEorPageCount" resultType="long">
    select count(*) from msg
    <include refid="where_sql"/>
    <!-- 高级查询加分页 -->
  </select>
  <select id="queryForPage" resultMap="BaseResultMap">
    SELECT ms.id,ms.msg,m.id as m_id,m.message as m_message,u.userid as u_userid,u.username as u_username FROM user u
    INNER JOIN msg ms ON(ms.userid=u.userid) INNER JOIN message m ON(ms.messageid=m.id)
    <include refid="where_sql"/>
    <if test="page!=null">
      limit #{start},#{rows}
    </if>
  </select>
  <!--查询这篇文章下面有多少评论-->
  <select id="allMsg" resultMap="BaseResultMap">
    SELECT ms.id,ms.msg,ms.messageid,m.userid,m.id as m_id,m.message as m_message,m.time as m_time,u.userid as u_userid,u.username as u_username FROM user u
    INNER JOIN msg ms ON(ms.userid=u.userid) INNER JOIN message m ON(ms.messageid=m.id)
   where messageid=#{messageid}
  </select>
  <!--根据用户id查查询你发的所有文章和这篇文章下面的所有评论-->
  <select id="allMessageMsg" resultMap="BaseResultMap">
    SELECT ms.id,ms.msg,ms.messageid,m.userid,m.id as m_id,m.message as m_message,m.time as m_time,u.userid as u_userid,u.username as u_username FROM user u
     INNER JOIN msg ms ON(ms.userid=u.userid) INNER JOIN message m ON(ms.messageid=m.id)
    where  u.userid=#{userid}
  </select>
</mapper>